<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="bibliotekdbDataSet1" targetNamespace="http://tempuri.org/bibliotekdbDataSet1.xsd" xmlns:mstns="http://tempuri.org/bibliotekdbDataSet1.xsd" xmlns="http://tempuri.org/bibliotekdbDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="bibliotekdbConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="bibliotekdbConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.bibgui.Properties.Settings.GlobalReference.Default.bibliotekdbConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="mediaTableAdapter" GeneratorDataComponentClassName="mediaTableAdapter" Name="media" UserDataComponentName="mediaTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="bibliotekdbConnectionString (Settings)" DbObjectName="bibliotekdb.dbo.media" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[media] WHERE (([Types_ID] = @Original_Types_ID) AND ([Types_Name] = @Original_Types_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Types_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Types_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Types_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Types_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[media] ([Types_Name]) VALUES (@Types_Name);
SELECT Types_ID, Types_Name FROM media WHERE (Types_ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Types_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Types_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Types_ID, Types_Name FROM dbo.media</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[media] SET [Types_Name] = @Types_Name WHERE (([Types_ID] = @Original_Types_ID) AND ([Types_Name] = @Original_Types_Name));
SELECT Types_ID, Types_Name FROM media WHERE (Types_ID = @Types_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Types_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Types_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Types_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Types_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Types_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Types_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Types_ID" ColumnName="Types_ID" DataSourceName="bibliotekdb.dbo.media" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Types_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Types_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Types_ID" DataSetColumn="Types_ID" />
              <Mapping SourceColumn="Types_Name" DataSetColumn="Types_Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="statusTableAdapter" GeneratorDataComponentClassName="statusTableAdapter" Name="status" UserDataComponentName="statusTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="bibliotekdbConnectionString (Settings)" DbObjectName="bibliotekdb.dbo.status" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[status] WHERE (([Status_ID] = @Original_Status_ID) AND ([Type_Name] = @Original_Type_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Status_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Status_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Type_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Type_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[status] ([Type_Name]) VALUES (@Type_Name);
SELECT Status_ID, Type_Name FROM status WHERE (Status_ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Type_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Type_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Status_ID, Type_Name FROM dbo.status</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[status] SET [Type_Name] = @Type_Name WHERE (([Status_ID] = @Original_Status_ID) AND ([Type_Name] = @Original_Type_Name));
SELECT Status_ID, Type_Name FROM status WHERE (Status_ID = @Status_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Type_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Type_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Status_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Status_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Type_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Type_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Status_ID" ColumnName="Status_ID" DataSourceName="bibliotekdb.dbo.status" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Status_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Status_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Status_ID" DataSetColumn="Status_ID" />
              <Mapping SourceColumn="Type_Name" DataSetColumn="Type_Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="bibliotekdbDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="bibliotekdbDataSet1" msprop:Generator_DataSetName="bibliotekdbDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="media" msprop:Generator_RowEvHandlerName="mediaRowChangeEventHandler" msprop:Generator_RowDeletedName="mediaRowDeleted" msprop:Generator_RowDeletingName="mediaRowDeleting" msprop:Generator_RowEvArgName="mediaRowChangeEvent" msprop:Generator_TablePropName="media" msprop:Generator_RowChangedName="mediaRowChanged" msprop:Generator_RowChangingName="mediaRowChanging" msprop:Generator_TableClassName="mediaDataTable" msprop:Generator_RowClassName="mediaRow" msprop:Generator_TableVarName="tablemedia" msprop:Generator_UserTableName="media">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Types_ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="Types_ID" msprop:Generator_ColumnPropNameInTable="Types_IDColumn" msprop:Generator_ColumnVarNameInTable="columnTypes_ID" msprop:Generator_UserColumnName="Types_ID" type="xs:int" />
              <xs:element name="Types_Name" msprop:Generator_ColumnPropNameInRow="Types_Name" msprop:Generator_ColumnPropNameInTable="Types_NameColumn" msprop:Generator_ColumnVarNameInTable="columnTypes_Name" msprop:Generator_UserColumnName="Types_Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="45" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="status" msprop:Generator_RowEvHandlerName="statusRowChangeEventHandler" msprop:Generator_RowDeletedName="statusRowDeleted" msprop:Generator_RowDeletingName="statusRowDeleting" msprop:Generator_RowEvArgName="statusRowChangeEvent" msprop:Generator_TablePropName="status" msprop:Generator_RowChangedName="statusRowChanged" msprop:Generator_RowChangingName="statusRowChanging" msprop:Generator_TableClassName="statusDataTable" msprop:Generator_RowClassName="statusRow" msprop:Generator_TableVarName="tablestatus" msprop:Generator_UserTableName="status">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Status_ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="Status_ID" msprop:Generator_ColumnPropNameInTable="Status_IDColumn" msprop:Generator_ColumnVarNameInTable="columnStatus_ID" msprop:Generator_UserColumnName="Status_ID" type="xs:int" />
              <xs:element name="Type_Name" msprop:Generator_ColumnPropNameInRow="Type_Name" msprop:Generator_ColumnPropNameInTable="Type_NameColumn" msprop:Generator_ColumnVarNameInTable="columnType_Name" msprop:Generator_UserColumnName="Type_Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="45" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:media" />
      <xs:field xpath="mstns:Types_ID" />
    </xs:unique>
    <xs:unique name="status_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:status" />
      <xs:field xpath="mstns:Status_ID" />
    </xs:unique>
  </xs:element>
</xs:schema>